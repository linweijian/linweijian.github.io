[{"title":"gitlab webhook","date":"2017-10-25T07:17:05.000Z","path":"2017/10/25/gitlab-webhook/","text":"项目需要将gitlab提交后自动同步部署到远程web服务器，需要用到钩子hook，当执行push操作会触发钩子 流程为： 【本地代码】–git push –&gt;【git服务器】– 触发hook，执行 exec(‘git pull’)–&gt;【web 服务器】 当代码git push到git服务器时候，会触发hook（hook部署在web的服务器上），hook的代码执行shell命令触发git pull到web 服务器上 gitlab有custom hook和web hook，这次用到的是web hook，打开gitlab，需要配置2个东西： 1）在settings找打SSH keys，这里需要填入SSH密钥，服务器会用ssh免账号密码方式从gitlab上pull代码 1$ ssh-keygen 然后输入key的名称，生成后会有xx和xx.pub , cat xx.pub 把里面的内容复制粘贴过去保存 2）找到自己的项目在齿轮的icon点击后找到Integrations或web hook 这里面需要填入的url是git push或其他events时候会触发的钩子，可以写个php来触发，token用来做校验 3）关键点，要看清楚权限，hook和的web项目的都在web服务器，hook运行的用户是在www下，因此上述的ssh key 和web的项目要用www的用户，否则权限不够（如果是root创建） 可以切换用户su www 然后 chown -R www:www xxx改变权限用户 4）关于hook，最好做token和ip校验，当校验通过后执行shell_exec或exec，不够要注意一点，如果git不是全局的，则需要 /usr/local/git/bin/git pull origin master","tags":[{"name":"git","slug":"git","permalink":"http://linweijian.github.io/tags/git/"}]},{"title":"创建博客","date":"2016-03-28T09:49:12.036Z","path":"2016/03/28/creat-a-blog/","text":"date: 2016-03-28 17:49:12 之前有过博客，也设置过域名，时间一长，域名服务器都过期了，放到轻博客可自定义不多 后来在git上看到可以创建博客，托管在git上免费且有免费域名，果断试一下 git博客通过一些资料搜索，在注册git后，打开https://github.com/new 创建仓库，仓库名和账号对应，我的就是 linweijian.github.io，网上教程很多我就不说了。贴个地址： http://blog.csdn.net/renfufei/article/details/37725057https://pages.github.com/ 在完整出来后，看着还不错，但是问题来了，这个确实也是就是静态页面。如果要新增文章，需要新建个html，写很多东西后再git上去，没错，就是最原始写法，这样的话估计花好多时间。。。 后来搜索到有git相关的静态博客生成工具：jekyll、hexo 试了下jekyll，是基于Ruby，在尝试下安装失败后没志气的我看了下hexo，基于nodejs来安装，志同道合就用他。hexo的使用很简单 Hexo12345npm install hexo-cli -g //安装hexohexo init blog //hexo创建博客cd blognpm install//安装相关依赖，话说好像我的自己都创建了hexo server//开启服务，一般在localhost:4000/ 很好，搞定 简单说一下生成的目录：12345678910.├── _config.yml //网站配置项├── package.json //应用程序的信息 相关hexo依赖├── scaffolds //模板文件夹，。新建页面时候根据该模板来新建文件 ├── source //存放原始的文章文件 下面的_posts是对应scaffolds的模板├── public //生成后文件，访问的就是这个目录| ├── _drafts| └── _posts└── themes//主题文件 好了，我开始要想写（zhuang）文（bi）了，使用1hexo new [layout] &lt;title&gt;这里的[layout] 是指scaffolds对应的模板，默认post 输入title后，根据对应模板即可生成文件，在写完文章后，使用hexo generate来生成文件 最后我们当然要发表到git上嘛，首先在_config.yml上找到deploy，改成如下：1234deploy: type: git repository: https://github.com/linweijian/linweijian.github.io //这是你的地址 branch: master要注意一点,:后面要加个空格否则会报错或者上传不成功 ok，在设置完毕后，hexo deploy后面会提示输入git的用户名密码即可上传 Markdownhexo支持Markdown Markdown是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。 通过一些很简单的符号，他可以自己输出相关的样式，所以我们只需要关心你的文章怎么写，这里介绍些网站： 认识与入门 Markdown Markdown 语法说明 wiki–这个一眼就看的懂了 简单的说下有哪些： 1.标题：Setext风格:123456This is an H1=============This is an H2------------- This is an H1This is an H2Atx风格:123# 标题1## 标题2### 标题3 标题1标题2标题32.引用使用&gt;加上一个空格123&gt; 测试测试测试测试&gt; &gt; 测试测试测试测试&gt; &gt; 测试测试测试测试 测试测试测试测试 3.列表无序列表可以使用* - +:1234* Red * Green * Blue Red Green Blue 12341. Bird2. McHale3. Parish Bird McHale Parish 4.代码区块使用`内容`方式123`function hello()&#123;alert(&apos;hello world&apos;);&#125;` function hello(){ alert(&#39;hello world&#39;); } 或者每进4格空格或者tab123function hello()&#123; alert(&apos;hello world&apos;);&#125; function hello(){ alert(&apos;hello world&apos;); } 5.分隔符用三个以上的星号、减号、底线来建立一个分隔线123---***___ 6.链接123[我的博客](https://github.com/linweijian/linweijian.github.io)![](/images/emoticon/1.jpg)&lt;https://github.com/linweijian/linweijian.github.io&gt; 我的博客https://github.com/linweijian/linweijian.github.io 7.转义123456789101112\\\\ 反斜杠\\` 反引号\\* 星号\\_ 下划线\\&#123;\\&#125; 大括号\\[\\] 中括号\\(\\) 小括号\\# 井号\\+ 加号\\- 减号\\. 英文句号\\! 感叹号 值得一提，，hexo也有相关的标签插件，所以可以混着用 1.引用1&#123;% blockquote %&#125;&#123;% endblockquote %&#125; 2.代码1&#123;% codeblock %&#125;&#123;% endcodeblock %&#125; 3.图片1&#123;% img [class names] /path/to/image [width] [height] [title text [alt text]] %&#125; 4.链接1&#123;% link text url [external] [title] %&#125; 等等，这里有详细的：点击看看 主题最后说下主题，hexo的主题不多，要更换的话在_config.yml里面的theme,主题文件下载后放到themes目录即可","tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://linweijian.github.io/tags/Hexo/"},{"name":"Markdown","slug":"Markdown","permalink":"http://linweijian.github.io/tags/Markdown/"}]}]